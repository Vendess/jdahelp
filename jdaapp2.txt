'''
pip install streamlit pandas matplotlib seaborn
5. Spustanie v datalabe
streamlit run app.py --browser.serverAddress 0.0.0.0 --server.enableCORS False
Zme≈à pathku v prehliadaƒçi: v≈°etko od /lab nahraƒè /proxy/8501/app kde app je n√°zov app.py
#https://datalab.kkui.fei.tuke.sk/jupyter/user/sk549ac/proxy/8501/app
'''

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 1. Konfigur√°cia str√°nky
st.set_page_config(
    page_title='Tips Dashboard', layout='wide',
    initial_sidebar_state='expanded'
)

st.title("Tips Dashboard üçΩÔ∏è")
st.markdown("Interakt√≠vna anal√Ωza √∫ƒçtov a tipov z datasetu `tips` (seaborn).")

# 2. Naƒç√≠tanie d√°t s cachovan√≠m
@st.cache_data
def load_data():
    return sns.load_dataset('tips')
df = load_data()

# 3. Uk√°≈æka d√°t v expanderi
with st.expander("Uk√°≈æka datasetu"):
    st.dataframe(df.head())

# 4. Sidebar ‚Äì vstupy
st.sidebar.header("Filter")

# V√Ωber d≈àa
days = df['day'].unique().tolist()
selected_days = st.sidebar.multiselect(
    "Vyber de≈à:", options=days, default=days, key='day_select'
)

# V√Ωber ƒçasu (Lunch/Dinner)
times = df['time'].unique().tolist()
selected_time = st.sidebar.selectbox(
    "Vyber ƒças:", options=times, index=0, key='time_select'
)

# Slider pre veƒækos≈• skupiny
group_size = st.sidebar.slider(
    "Veƒækos≈• skupiny (poƒçet os√¥b):", min(df['size']), max(df['size']), (1, max(df['size'])), key='size_range'
)

# 5. Filtr√°cia d√°t
df_filtered = df[
    (df.day.isin(selected_days)) &
    (df.time == selected_time) &
    (df["size"].between(group_size[0], group_size[1]))
]
st.write(f"**Filter count:** {df_filtered.shape[0]} riadkov")

# 6. Vizualiz√°cia scatter plot
fig, ax = plt.subplots(figsize=(8, 5))
ax.scatter(df_filtered.total_bill, df_filtered.tip)
ax.set_xlabel("Total Bill")
ax.set_ylabel("Tip")
ax.set_title("Tip vs. Total Bill")
st.pyplot(fig)

# 7. Bar chart priemernej v√Ω≈°ky tipu podƒæa d≈àa
df_bar = (
    df_filtered.groupby('day')['tip']
    .mean()
    .reset_index()
)
fig2, ax2 = plt.subplots(figsize=(6, 4))
ax2.bar(df_bar['day'], df_bar['tip'])
ax2.set_xlabel("Day")
ax2.set_ylabel("Average Tip")
ax2.set_title("Priemern√Ω tip podƒæa d≈àa")
st.pyplot(fig2)

# 8. Stiahnutie d√°t
to_download = df_filtered.to_csv(index=False).encode('utf-8')
st.download_button(
    "Stiahnu≈• filtrovan√© d√°ta CSV",
    data=to_download,
    file_name='tips_filtered.csv',
    mime='text/csv'
)


### TER TER ### TER TER ### TER TER ### TER TER ### TER TER ### TER TER 
### TER TER ### TER TER ### TER TER ### TER TER ### TER TER ### TER TER 

2.1 Layouty (rozlo≈æenie prvkov)
Streamlit poskytuje n√°stroje na usporiadanie UI komponentov tak, aby bola aplik√°cia prehƒæadn√° a pou≈æ√≠vateƒæsky pr√≠jemn√°.

st.set_page_config

Nastavuje z√°kladn√© parametre str√°nky: n√°zov (page_title), layout (wide vs. centered) a v√Ωchodiskov√Ω stav sidebaru.
Pou≈æitie:
st.set_page_config(
    page_title='Tips Dashboard',
    layout='wide',           # vyu≈æ√≠va cel√∫ ≈°√≠rku obrazovky
    initial_sidebar_state='expanded'
)
Sidebar (st.sidebar)

Sl√∫≈æi na umiestnenie ovl√°dac√≠ch prvkov mimo hlavn√©ho obsahu.
Ka≈æd√Ω widget m√¥≈æete volan√≠m .sidebar umiestni≈• do boƒçn√©ho panelu:
selected_day = st.sidebar.selectbox('De≈à', df['day'].unique())
V sidebar m√¥≈æete prid√°va≈• nadpisy (st.sidebar.header), text ƒçi expandery.
Columns (st.columns)

Rozdeƒæuje priestor na zadan√Ω poƒçet vertik√°lnych stƒ∫pcov.
Pou≈æitie:
col1, col2 = st.columns(2)
with col1:
    st.write('V prvom stƒ∫pci')
with col2:
    st.write('V druhom stƒ∫pci')
Umo≈æ≈àuje paraleln√© zobrazenie grafov, tabuliek ƒçi textu.
Containers (st.container)

Vytvor√≠ nov√© logick√© zoskupenie prvkov, do ktor√©ho m√¥≈æete dynamicky prid√°va≈• obsah.
Pou≈æitie:
container = st.container()
container.write('Text v kontejnere')
container.line_chart(data)
Expandery (st.expander)

Umo≈æ≈àuj√∫ schova≈•/vykresli≈• dlh√© ƒçasti UI, udr≈æiavaj√∫ prehƒæadnos≈•.
Pou≈æitie:
with st.expander('Viac inform√°ci√≠'):
    st.write(df.describe())
2.2 Vstupn√© widgety (input)
Umo≈æ≈àuj√∫ pou≈æ√≠vateƒæovi interagova≈• s aplik√°ciou. Ka≈æd√Ω widget akceptuje vstupn√© parametre a vracia hodnotu pou≈æ√≠vateƒæa.

Widget	Parametre	Vr√°ten√° hodnota	Vyu≈æitie
st.slider	label, min_value, max_value, value, step, key	Int/Float alebo Tuple	V√Ωber ƒç√≠seln√©ho rozsahu alebo hodnoty
st.selectbox	label, options, index, format_func, key	Jedna vybran√° mo≈ænos≈•	V√Ωber z ponuky
st.multiselect	label, options, default, key	Zoznam vybran√Ωch	V√Ωber viacer√Ωch mo≈ænost√≠
st.checkbox	label, value, key	Bool	Zapn√∫≈•/vypn√∫≈• funkciu
st.button	label, key	Bool (klik)	Spustenie akcie na klik
st.text_input	label, value, max_chars, key	String	Textov√Ω vstup
st.date_input	label, value, min_value, max_value, key	datetime.date alebo tuple	V√Ωber d√°tumu alebo rozsahu d√°tumov
st.file_uploader	label, type, accept_multiple_files, key	Uploaded file(s)	Naƒç√≠tanie extern√©ho s√∫boru
Pr√≠klady:

Slider pre veƒækos≈• skupiny:

group_size = st.sidebar.slider(
    'Veƒækos≈• skupiny',
    min_value=int(df['size'].min()),
    max_value=int(df['size'].max()),
    value=(1, 6),
    step=1,
    key='size_range'
)  # vr√°ti tuple (min, max)
Jednoduch√Ω selectbox:

day = st.selectbox('Vyber de≈à',
                   options=['Thur', 'Fri', 'Sat', 'Sun'],
                   index=0,
                   key='day_select')
Multiselect pre met√≥dy:

methods = df['method'].unique()
selected = st.multiselect('Met√≥dy objavu',
                           options=methods,
                           default=methods,
                           key='method_select')
Checkbox pre zobrazenie grafu:

show_chart = st.checkbox('Zobrazi≈• graf', value=True, key='show_chart')
if show_chart:
    st.pyplot(fig)
Date input pre v√Ωber rozsahu d√°tumu:

dates = st.date_input(
    'Rozsah d√°tumov',
    value=(df['date'].min(), df['date'].max()),
    key='date_range'
)
